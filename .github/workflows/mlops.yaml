name: MLOps Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - run: pip install flake8
      - run: flake8 .

  build-test-train:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: file:./mlruns
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: python tests/test_model_pipeline.py
      - name: Train model
        run: python src/model_training.py
      - name: Upload trained model
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: models/
      - name: evaluate model
        run: python src/model_evaluation.py

  model-register:
    runs-on: ubuntu-latest
    needs: build-test-train
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - run: pip install -r requirements.txt
      - run: python src/model_register.py

  deploy:
    runs-on: ubuntu-latest
    needs: model-register
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - run: pip install mlflow[extras]
      # Example: serve the last model (runs in background on CI agent)
      - run: |
          mlflow models serve \
                  -m "mlruns/0/$(ls mlruns/0 | sort | tail -n 1)/artifacts/model" \
                  --no-conda -p 5000 --env-manager local &
      # Or: deploy to cloud (e.g., push docker image, upload to s3, call cloud API)
